"use strict";(self.webpackChunk_coscene_io_docs=self.webpackChunk_coscene_io_docs||[]).push([["5914"],{76308:function(e,r,n){n.r(r),n.d(r,{frontMatter:()=>c,default:()=>h,toc:()=>l,metadata:()=>t,assets:()=>s,contentTitle:()=>d});var t=JSON.parse('{"id":"automation/action-runtime","title":"Action Runtime Information","description":"When an action is running, it automatically prepares some environment variables and upstream helper steps to facilitate data exchange between the action and the platform.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/6-automation/6-action-runtime.md","sourceDirName":"6-automation","slug":"/automation/action-runtime","permalink":"/docs/automation/action-runtime","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"Qi He","lastUpdatedAt":1755605770000,"sidebarPosition":6,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Invocations","permalink":"/docs/automation/invocation"},"next":{"title":"\u4EFF\u771F\u4E0E\u6D4B\u8BD5","permalink":"/docs/category/sim-and-tests"}}'),i=n(96773),o=n(68502);let c={},d="Action Runtime Information",s={},l=[{value:"Environment Variables",id:"environment-variables",level:2},{value:"COS_TOKEN",id:"cos_token",level:2},{value:"Using Output Directory to Create and Update Records",id:"using-output-directory-to-create-and-update-records",level:2},{value:"Directory Structure Convention",id:"directory-convention",level:3},{value:"Declaration File Format",id:"declaration-file-schema",level:3}];function a(e){let r={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.header,{children:(0,i.jsx)(r.h1,{id:"action-runtime-information",children:"Action Runtime Information"})}),"\n",(0,i.jsx)(r.p,{children:"When an action is running, it automatically prepares some environment variables and upstream helper steps to facilitate data exchange between the action and the platform."}),"\n",(0,i.jsx)(r.h2,{id:"environment-variables",children:"Environment Variables"}),"\n",(0,i.jsx)(r.p,{children:"In addition to the system-reserved variables listed below, you may define your own variables for use at runtime."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Avoid"})," naming collisions with the reserved variables to prevent unexpected errors."]}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Environment Variable Name"}),(0,i.jsx)(r.th,{children:"Value"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"COS_FILE_VOLUME"})}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"/cos/files"})}),(0,i.jsx)(r.td,{children:"Mount directory for records"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"COS_CODE_VOLUME"})}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"/cos/codes"})}),(0,i.jsx)(r.td,{children:"Mount directory for code"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"COS_BIN_VOLUME"})}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"/cos/bins"})}),(0,i.jsx)(r.td,{children:"Mount directory for binary files"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"COS_BUNDLE_VOLUME"})}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"/cos/bundles"})}),(0,i.jsx)(r.td,{children:"Mount directory for test programs in batch testing"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"COS_ARTIFACT_VOLUME"})}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"/cos/artifacts"})}),(0,i.jsx)(r.td,{children:"Artifact directory for batch testing"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"COS_OUTPUT_VOLUME"})}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"/cos/outputs"})}),(0,i.jsx)(r.td,{children:"Output file directory for batch testing"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"COS_ORGID"})}),(0,i.jsx)(r.td,{children:"ORG UUID"}),(0,i.jsx)(r.td,{children:"ORG ID"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"COS_USERID"})}),(0,i.jsx)(r.td,{children:"USER UUID"}),(0,i.jsx)(r.td,{children:"USER ID"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"COS_WAREHOUSEID"})}),(0,i.jsx)(r.td,{children:"WAREHOUSE UUID"}),(0,i.jsx)(r.td,{children:"Warehouse ID"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"COS_PROJECT"})}),(0,i.jsx)(r.td,{children:"PROJECT SLUG"}),(0,i.jsx)(r.td,{children:"Current Action Running Project SLUG"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"COS_PROJECTID"})}),(0,i.jsx)(r.td,{children:"PROJECT UUID"}),(0,i.jsx)(r.td,{children:"Current Action Running Project ID"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"COS_RECORDID"})}),(0,i.jsx)(r.td,{children:"RECORD UUID"}),(0,i.jsx)(r.td,{children:"Record ID"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"COS_ENDPOINT"})}),(0,i.jsx)(r.td,{children:"API URL"}),(0,i.jsx)(r.td,{children:"coScene API Endpoint"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"COS_TOKEN"})}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{children:"CLI and API Token"})]})]})]}),"\n",(0,i.jsx)(r.p,{children:"Some of the above environment variables have empty values, which are optional. If they exist, their values are in UUID format; if not, they are empty."}),"\n",(0,i.jsx)(r.h2,{id:"cos_token",children:"COS_TOKEN"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"COS_TOKEN"})," is automatically injected at startup."]}),"\n",(0,i.jsxs)(r.p,{children:["Its permissions ",(0,i.jsx)(r.strong,{children:"mirror those of the user who triggered the action"}),". When performing ",(0,i.jsx)(r.strong,{children:"cross-project"})," operations, ensure the triggering user holds the required permissions on the target project; otherwise, related API calls will fail."]}),"\n",(0,i.jsx)(r.h2,{id:"using-output-directory-to-create-and-update-records",children:"Using Output Directory to Create and Update Records"}),"\n",(0,i.jsxs)(r.p,{children:["During action runtime, you can use ",(0,i.jsx)(r.code,{children:"COS_TOKEN"})," to call OpenAPI or coCLI to perform almost all platform operations."]}),"\n",(0,i.jsx)(r.p,{children:"For common operations like creating and updating records, you can also output files according to a specified file structure, and the action runtime environment will automatically complete record creation and updates."}),"\n",(0,i.jsxs)(r.p,{children:["After the action finishes running, the platform will automatically scan the specific directory structure under ",(0,i.jsx)(r.code,{children:"COS_OUTPUT_VOLUME"})," and automatically create or update records based on configuration files, while uploading related files."]}),"\n",(0,i.jsx)(r.h3,{id:"directory-convention",children:"Directory Structure Convention"}),"\n",(0,i.jsxs)(r.p,{children:["Please organize files according to the following structure within the mounted ",(0,i.jsx)(r.code,{children:"COS_OUTPUT_VOLUME"})," directory:"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"$COS_OUTPUT_VOLUME\n\u2514\u2500\u2500 records\n    \u251C\u2500\u2500 record-directory-1/      # Any name\n    \u2502   \u251C\u2500\u2500 front-001.jpg        # Files to be uploaded\n    \u2502   \u251C\u2500\u2500 front-002.jpg\n    \u2502   \u2514\u2500\u2500 .cos/\n    \u2502       \u2514\u2500\u2500 record.patch.json\n    \u2514\u2500\u2500 record-directory-2/\n        \u251C\u2500\u2500 rear-001.jpg\n        \u251C\u2500\u2500 rear-002.jpg\n        \u2514\u2500\u2500 .cos/\n            \u2514\u2500\u2500 record.patch.json\n"})}),"\n",(0,i.jsx)(r.p,{children:"Key requirements:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:["Each first-level subdirectory under ",(0,i.jsx)(r.code,{children:"/records"})," represents a record operation."]}),"\n",(0,i.jsxs)(r.li,{children:["Each record directory must contain a ",(0,i.jsx)(r.code,{children:".cos/"})," subdirectory."]}),"\n",(0,i.jsxs)(r.li,{children:["The ",(0,i.jsx)(r.code,{children:".cos/"})," directory must contain a ",(0,i.jsx)(r.code,{children:"record.patch.json"})," file."]}),"\n",(0,i.jsx)(r.li,{children:"Other files in the record directory will be automatically uploaded to the corresponding record."}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"declaration-file-schema",children:"Declaration File Format"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"record.patch.json"})," defines record creation or update operations in the following format:"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-json",children:'{\n  "projectSlug": "project-slug", // Optional, defaults to current project\n  "id": "record UUID", // Required for update or delete operations\n  "labels": [],\n  "title": "Record Title", // Required when creating records\n  "description": "Record Description", // Optional\n  // Other record properties, optional\n  "patch": [\n    // RFC 6902 JSON Patch standard\n    { "op": "replace", "path": "/title", "value": "Cam-front (night)" },\n    { "op": "add", "path": "/labels/-", "value": "night-run" },\n    { "op": "remove", "path": "/labels/0" },\n    { "op": "add", "path": "/files/path/to/file", "value": "../1.jpg" }\n  ]\n}\n'})}),"\n",(0,i.jsx)(r.p,{children:"This JSON file mainly contains three parts:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:["Special properties: If you need to perform cross-project operations, specify ",(0,i.jsx)(r.code,{children:"projectSlug"}),"."]}),"\n",(0,i.jsxs)(r.li,{children:["Regular properties: Describe basic record information. When no ",(0,i.jsx)(r.code,{children:"id"})," is specified, it indicates creating a new record."]}),"\n",(0,i.jsx)(r.li,{children:"patch array: Provides fine-grained property modification control, following the RFC 6902 standard."}),"\n"]})]})}function h(e={}){let{wrapper:r}={...(0,o.a)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},68502:function(e,r,n){n.d(r,{Z:()=>d,a:()=>c});var t=n(41699);let i={},o=t.createContext(i);function c(e){let r=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function d(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),t.createElement(o.Provider,{value:r},e.children)}}}]);