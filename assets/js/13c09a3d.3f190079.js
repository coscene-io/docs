"use strict";(self.webpackChunk_coscene_io_docs=self.webpackChunk_coscene_io_docs||[]).push([["3190"],{72002:function(e,n,i){i.r(n),i.d(n,{frontMatter:()=>r,default:()=>p,toc:()=>o,metadata:()=>t,assets:()=>a,contentTitle:()=>d});var t=JSON.parse('{"id":"viz/extensions/api/custom-panels/settings-tree-field","title":"SettingsTreeField","description":"SettingsTreeField represents a field in a settings tree. Each field has a specific input type, such as text, number, or boolean.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/viz/8-extensions/5-api/3-custom-panels/9-settings-tree-field.md","sourceDirName":"viz/8-extensions/5-api/3-custom-panels","slug":"/viz/extensions/api/custom-panels/settings-tree-field","permalink":"/docs/viz/extensions/api/custom-panels/settings-tree-field","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"Qi He","lastUpdatedAt":1755605770000,"sidebarPosition":9,"frontMatter":{"sidebar_position":9},"sidebar":"tutorialSidebar","previous":{"title":"SettingsTreeChildren","permalink":"/docs/viz/extensions/api/custom-panels/settings-tree-children"},"next":{"title":"SettingsTreeFields","permalink":"/docs/viz/extensions/api/custom-panels/settings-tree-fields"}}'),s=i(96773),l=i(68502);let r={sidebar_position:9},d="SettingsTreeField",a={},o=[{value:"Properties",id:"properties",level:2},{value:"label",id:"label",level:3},{value:"input",id:"input",level:3},{value:"help?",id:"help",level:3},{value:"error?",id:"error",level:3},{value:"disabled?",id:"disabled",level:3},{value:"hidden?",id:"hidden",level:3},{value:"icon?",id:"icon",level:3}];function c(e){let n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,l.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"settingstreefield",children:"SettingsTreeField"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"type SettingsTreeField = object;\n"})}),"\n",(0,s.jsx)(n.p,{children:"SettingsTreeField represents a field in a settings tree. Each field has a specific input type, such as text, number, or boolean."}),"\n",(0,s.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,s.jsx)(n.h3,{id:"label",children:"label"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"label: string;\n"})}),"\n",(0,s.jsx)(n.p,{children:"The label displayed for the field."}),"\n",(0,s.jsx)(n.h3,{id:"input",children:"input"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"input: 'boolean' |\n  'number' |\n  'select' |\n  'string' |\n  'text' |\n  'toggle' |\n  'vec2' |\n  'vec3' |\n  'rgb' |\n  'rgba' |\n  'message-path' |\n  'autocomplete';\n"})}),"\n",(0,s.jsx)(n.p,{children:"The type of input control to display for the field."}),"\n",(0,s.jsx)(n.h3,{id:"help",children:"help?"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"optional help: string;\n"})}),"\n",(0,s.jsx)(n.p,{children:"Help text to display alongside the field."}),"\n",(0,s.jsx)(n.h3,{id:"error",children:"error?"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"optional error: string;\n"})}),"\n",(0,s.jsx)(n.p,{children:"Error message to display if the field value is invalid."}),"\n",(0,s.jsx)(n.h3,{id:"disabled",children:"disabled?"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"optional disabled: boolean;\n"})}),"\n",(0,s.jsx)(n.p,{children:"Whether the field is disabled and cannot be edited."}),"\n",(0,s.jsx)(n.h3,{id:"hidden",children:"hidden?"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"optional hidden: boolean;\n"})}),"\n",(0,s.jsx)(n.p,{children:"Whether the field is hidden from view."}),"\n",(0,s.jsx)(n.h3,{id:"icon",children:"icon?"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"optional icon: SettingsIcon;\n"})}),"\n",(0,s.jsx)(n.p,{children:"The icon to display alongside the field label."})]})}function p(e={}){let{wrapper:n}={...(0,l.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},68502:function(e,n,i){i.d(n,{Z:()=>d,a:()=>r});var t=i(41699);let s={},l=t.createContext(s);function r(e){let n=t.useContext(l);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(l.Provider,{value:n},e.children)}}}]);