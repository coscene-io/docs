"use strict";(self.webpackChunk_coscene_io_docs=self.webpackChunk_coscene_io_docs||[]).push([["9526"],{6819:function(e,t,i){i.r(t),i.d(t,{frontMatter:()=>l,default:()=>h,toc:()=>c,metadata:()=>r,assets:()=>o,contentTitle:()=>n});var r=JSON.parse('{"id":"viz/message-schemas/model-primitive","title":"ModelPrimitive","description":"Represents the original type of a 3D model file loaded from an external URL or embedded data","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/viz/9-message-schemas/model-primitive.md","sourceDirName":"viz/9-message-schemas","slug":"/viz/message-schemas/model-primitive","permalink":"/docs/viz/message-schemas/model-primitive","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"Qi He","lastUpdatedAt":1755605770000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Log","permalink":"/docs/viz/message-schemas/log"},"next":{"title":"PackedElementField","permalink":"/docs/viz/message-schemas/packed-element-field"}}'),d=i(96773),s=i(68502);let l={},n="ModelPrimitive",o={},c=[{value:"Parent Data Structure",id:"parent-data-structure",level:2},{value:"Data Structure",id:"data-structure",level:2},{value:"Reference Implementation",id:"reference-implementation",level:2}];function a(e){let t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.a)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(t.header,{children:(0,d.jsx)(t.h1,{id:"modelprimitive",children:"ModelPrimitive"})}),"\n",(0,d.jsx)(t.p,{children:"Represents the original type of a 3D model file loaded from an external URL or embedded data"}),"\n",(0,d.jsx)(t.h2,{id:"parent-data-structure",children:"Parent Data Structure"}),"\n",(0,d.jsxs)(t.p,{children:[(0,d.jsx)(t.code,{children:"ModelPrimitive"})," appears in the ",(0,d.jsx)(t.a,{href:"./scene-entity",children:(0,d.jsx)(t.code,{children:"SceneEntity"})})," message data structure."]}),"\n",(0,d.jsx)(t.h2,{id:"data-structure",children:"Data Structure"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Field"}),(0,d.jsx)(t.th,{children:"Type"}),(0,d.jsx)(t.th,{children:"Description"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"pose"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"./pose",children:(0,d.jsx)(t.code,{children:"pose"})})}),(0,d.jsx)(t.td,{children:"The origin of the model relative to the reference frame"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"scale"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"./vector-3",children:(0,d.jsx)(t.code,{children:"Vector3"})})}),(0,d.jsx)(t.td,{children:"The scale factor applied to the model along each axis"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"color"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"./color",children:(0,d.jsx)(t.code,{children:"color"})})}),(0,d.jsxs)(t.td,{children:["The pure color used for the entire model if ",(0,d.jsx)(t.code,{children:"override_color"})," is true"]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"override_color"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"./built-in%20types#boolean",children:(0,d.jsx)(t.code,{children:"boolean"})})}),(0,d.jsxs)(t.td,{children:["Whether to use the color specified in ",(0,d.jsx)(t.code,{children:"color"})," instead of any embedded materials in the original model"]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"url"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"./built-in%20types#string",children:(0,d.jsx)(t.code,{children:"string"})})}),(0,d.jsxs)(t.td,{children:["The URL pointing to the model file. Either ",(0,d.jsx)(t.code,{children:"url"})," or ",(0,d.jsx)(t.code,{children:"data"})," must be provided."]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"media_type"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"./built-in%20types#string",children:(0,d.jsx)(t.code,{children:"string"})})}),(0,d.jsxs)(t.td,{children:["The ",(0,d.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types",children:"media type"})," of the embedded model (e.g. ",(0,d.jsx)(t.code,{children:"model/gltf-binary"}),"). If ",(0,d.jsx)(t.code,{children:"data"})," is provided instead of ",(0,d.jsx)(t.code,{children:"url"}),", this field is required. If ",(0,d.jsx)(t.code,{children:"url"})," is provided, it overrides the inferred media type."]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"data"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"./built-in%20types#bytes",children:(0,d.jsx)(t.code,{children:"bytes"})})}),(0,d.jsxs)(t.td,{children:["The embedded model. Either ",(0,d.jsx)(t.code,{children:"url"})," or ",(0,d.jsx)(t.code,{children:"data"})," must be provided. If ",(0,d.jsx)(t.code,{children:"data"})," is provided, ",(0,d.jsx)(t.code,{children:"media_type"})," must be set to indicate the type of data."]})]})]})]}),"\n",(0,d.jsx)(t.h2,{id:"reference-implementation",children:"Reference Implementation"}),"\n",(0,d.jsx)(t.p,{children:"Visualization data structures are framework-agnostic and can be implemented using any supported message encoding:"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Encoding"}),(0,d.jsx)(t.th,{children:"Data Structure"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"ROS 1"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"https://github.com/foxglove/foxglove-sdk/blob/main/schemas/ros1/ModelPrimitive.msg",children:"foxglove_msgs/ModelPrimitive"})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"ROS 2"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"https://github.com/foxglove/foxglove-sdk/blob/main/schemas/ros2/ModelPrimitive.msg",children:"foxglove_msgs/msg/ModelPrimitive"})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"JSON"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"https://github.com/foxglove/foxglove-sdk/blob/main/schemas/jsonschema/ModelPrimitive.json",children:"foxglove.ModelPrimitive"})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"Protobuf"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"https://github.com/foxglove/foxglove-sdk/blob/main/schemas/proto/foxglove/ModelPrimitive.proto",children:"foxglove.ModelPrimitive"})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"FlatBuffers"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"https://github.com/foxglove/foxglove-sdk/blob/main/schemas/flatbuffer/ModelPrimitive.fbs",children:"foxglove.ModelPrimitive"})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"OMG IDL"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"https://github.com/foxglove/foxglove-sdk/blob/main/schemas/omgidl/foxglove/ModelPrimitive.idl",children:"foxglove::ModelPrimitive"})})]})]})]}),"\n",(0,d.jsx)(t.p,{children:"You must use the data structure name specified above so that the visualization can recognize the data structure."})]})}function h(e={}){let{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,d.jsx)(t,{...e,children:(0,d.jsx)(a,{...e})}):a(e)}},68502:function(e,t,i){i.d(t,{Z:()=>n,a:()=>l});var r=i(41699);let d={},s=r.createContext(d);function l(e){let t=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function n(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:l(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);