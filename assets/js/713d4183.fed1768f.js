"use strict";(self.webpackChunk_coscene_io_docs=self.webpackChunk_coscene_io_docs||[]).push([["1038"],{82243:function(e,n,s){s.r(n),s.d(n,{frontMatter:()=>o,default:()=>h,toc:()=>c,metadata:()=>i,assets:()=>l,contentTitle:()=>r});var i=JSON.parse('{"id":"developers/concepts/auth-models","title":"Users and Permissions","description":"Data is the most important asset for all coScene users. While enabling users to efficiently use data, we also pay great attention to users\' requirements for the security and confidentiality of their data assets. From day one, we have been designing and building a flexible, scalable, and configurable permission model to meet our customers\' needs for confidentiality, security, and control.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/developers/concepts/2-auth-models.md","sourceDirName":"developers/concepts","slug":"/developers/concepts/auth-models","permalink":"/docs/developers/concepts/auth-models","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"Qi He","lastUpdatedAt":1755605770000,"sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Data Model","permalink":"/docs/developers/concepts/data-models"},"next":{"title":"Automation","permalink":"/docs/developers/concepts/workflow"}}'),t=s(96773),a=s(68502);let o={sidebar_position:2},r="Users and Permissions",l={},c=[{value:"Organizations and Projects",id:"organizations-and-projects",level:2},{value:"Permissions and Resources",id:"permissions-and-resources",level:2},{value:"Organization",id:"organization",level:3},{value:"Project",id:"project",level:3}];function d(e){let n={a:"a",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",...(0,a.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"users-and-permissions",children:"Users and Permissions"})}),"\n",(0,t.jsx)(n.p,{children:"Data is the most important asset for all coScene users. While enabling users to efficiently use data, we also pay great attention to users' requirements for the security and confidentiality of their data assets. From day one, we have been designing and building a flexible, scalable, and configurable permission model to meet our customers' needs for confidentiality, security, and control."}),"\n",(0,t.jsxs)(n.p,{children:["coScene's current permission system fully references the best practices in the industry, taking into account the impact of ",(0,t.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Role-based_access_control",children:"RBAC"})," and ",(0,t.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Attribute-based_access_control",children:"ABAC"})," models on our application. At this stage, coScene's implementation is based on RBAC, but will gradually introduce features of ABAC in upcoming releases, ultimately achieving a flexible yet easy-to-understand permission setting model."]}),"\n",(0,t.jsx)(n.h2,{id:"organizations-and-projects",children:"Organizations and Projects"}),"\n",(0,t.jsx)(n.p,{children:"As the permission container carriers of the application, coScene mainly divides various resources into two levels. The first level is the organization. All actual users of coScene should belong to a real group, which is reflected in coScene as an organization. The organization does not own actual data resources but has actual resource entities within the organization, such as equipment and personnel, and assigns roles to members at the organizational level."}),"\n",(0,t.jsx)(n.p,{children:"The organization is also the owner of projects, and each organization can have any number of projects. Projects, as the container carriers for data generated by users and devices, are the second level of permission resource isolation system within coScene. Files and records produced by devices, events generated by devices and users, and the flow relationships between various requests all occur within the project."}),"\n",(0,t.jsx)(n.h2,{id:"permissions-and-resources",children:"Permissions and Resources"}),"\n",(0,t.jsx)(n.p,{children:"Based on the above permission system and principles, the coScene platform predefines various actions (Action) and policies (Policy) for all resources within the system and defines template roles, which are as follows:"}),"\n",(0,t.jsx)(n.h3,{id:"organization",children:"Organization"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Organization Administrator: Can manage all resources and permissions within the organization"}),"\n",(0,t.jsx)(n.li,{children:"Member: Can manage all data within the organization that members have permission to"}),"\n",(0,t.jsx)(n.li,{children:"Read-only Member: Can read all data within the organization that members have permission to"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"project",children:"Project"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Project Administrator: Can manage all resources and permissions within the project"}),"\n",(0,t.jsx)(n.li,{children:"Member: Can manage all data within the project"}),"\n",(0,t.jsx)(n.li,{children:"Read-only Member: Can read all data within the project"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"When a user has a role in a project, the user's role within the project will be prioritized. The only exception is the organizational administrator, who currently has the highest system permission, can access all projects, and will ignore the role settings within the project (if any)."})]})}function h(e={}){let{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},68502:function(e,n,s){s.d(n,{Z:()=>r,a:()=>o});var i=s(41699);let t={},a=i.createContext(t);function o(e){let n=i.useContext(a);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);