"use strict";(self.webpackChunk_coscene_io_docs=self.webpackChunk_coscene_io_docs||[]).push([["4846"],{92813:function(e,n,i){i.r(n),i.d(n,{frontMatter:()=>r,default:()=>p,toc:()=>o,metadata:()=>s,assets:()=>d,contentTitle:()=>a});var s=JSON.parse('{"id":"viz/extensions/api/custom-panels/settings-tree-node","title":"SettingsTreeNode","description":"SettingsTreeNode represents a node in a settings tree. Nodes can contain fields and child nodes.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/viz/8-extensions/5-api/3-custom-panels/12-settings-tree-node.md","sourceDirName":"viz/8-extensions/5-api/3-custom-panels","slug":"/viz/extensions/api/custom-panels/settings-tree-node","permalink":"/docs/viz/extensions/api/custom-panels/settings-tree-node","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"Qi He","lastUpdatedAt":1755605770000,"sidebarPosition":12,"frontMatter":{"sidebar_position":12},"sidebar":"tutorialSidebar","previous":{"title":"SettingsTreeFieldValue","permalink":"/docs/viz/extensions/api/custom-panels/settings-tree-field-value"},"next":{"title":"SettingsTreeNodeAction","permalink":"/docs/viz/extensions/api/custom-panels/settings-tree-node-action"}}'),t=i(96773),l=i(68502);let r={sidebar_position:12},a="SettingsTreeNode",d={},o=[{value:"Properties",id:"properties",level:2},{value:"label",id:"label",level:3},{value:"children?",id:"children",level:3},{value:"fields?",id:"fields",level:3},{value:"defaultExpansionState?",id:"defaultexpansionstate",level:3},{value:"error?",id:"error",level:3},{value:"visible?",id:"visible",level:3},{value:"renamable?",id:"renamable",level:3},{value:"actions?",id:"actions",level:3},{value:"handler?",id:"handler",level:3},{value:"Example",id:"example",level:2},{value:"order?",id:"order",level:3},{value:"enableVisibilityFilter?",id:"enablevisibilityfilter",level:3}];function c(e){let n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",p:"p",pre:"pre",...(0,l.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"settingstreenode",children:"SettingsTreeNode"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"type SettingsTreeNode = object;\n"})}),"\n",(0,t.jsx)(n.p,{children:"SettingsTreeNode represents a node in a settings tree. Nodes can contain fields and child nodes."}),"\n",(0,t.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,t.jsx)(n.h3,{id:"label",children:"label"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"label: string;\n"})}),"\n",(0,t.jsx)(n.p,{children:"The label displayed for the node."}),"\n",(0,t.jsx)(n.h3,{id:"children",children:"children?"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"optional children: SettingsTreeChildren;\n"})}),"\n",(0,t.jsx)(n.p,{children:"Child nodes of this node."}),"\n",(0,t.jsx)(n.h3,{id:"fields",children:"fields?"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"optional fields: SettingsTreeFields;\n"})}),"\n",(0,t.jsx)(n.p,{children:"Fields contained in this node."}),"\n",(0,t.jsx)(n.h3,{id:"defaultexpansionstate",children:"defaultExpansionState?"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'optional defaultExpansionState: "collapsed" | "expanded";\n'})}),"\n",(0,t.jsx)(n.p,{children:"The default expansion state of the node."}),"\n",(0,t.jsx)(n.h3,{id:"error",children:"error?"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"optional error: string;\n"})}),"\n",(0,t.jsx)(n.p,{children:"Error message to display if there's an issue with the node."}),"\n",(0,t.jsx)(n.h3,{id:"visible",children:"visible?"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"optional visible: boolean;\n"})}),"\n",(0,t.jsx)(n.p,{children:"Whether the node is visible in the UI."}),"\n",(0,t.jsx)(n.h3,{id:"renamable",children:"renamable?"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"optional renamable: boolean;\n"})}),"\n",(0,t.jsx)(n.p,{children:"Whether the node can be renamed by the user."}),"\n",(0,t.jsx)(n.h3,{id:"actions",children:"actions?"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"optional actions: SettingsTreeNodeAction[];\n"})}),"\n",(0,t.jsx)(n.p,{children:"Actions that can be performed on the node, displayed as buttons."}),"\n",(0,t.jsx)(n.h3,{id:"handler",children:"handler?"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"optional handler: (action: SettingsTreeNodeAction) => void;\n"})}),"\n",(0,t.jsx)(n.p,{children:"Handler for node actions."}),"\n",(0,t.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"const node: SettingsTreeNode = {\n  label: 'Camera Settings',\n  fields: {\n    fov: {\n      label: 'Field of View',\n      input: 'number',\n      value: 60,\n      min: 10,\n      max: 120,\n    },\n    near: {\n      label: 'Near Clip',\n      input: 'number',\n      value: 0.1,\n    },\n    far: {\n      label: 'Far Clip',\n      input: 'number',\n      value: 1000,\n    },\n  },\n  children: {\n    advanced: {\n      label: 'Advanced',\n      defaultExpansionState: 'collapsed',\n      fields: {\n        antialiasing: {\n          label: 'Anti-aliasing',\n          input: 'select',\n          value: 'msaa',\n          options: [\n            { value: 'none', label: 'None' },\n            { value: 'fxaa', label: 'FXAA' },\n            { value: 'msaa', label: 'MSAA' },\n          ],\n        },\n      },\n    },\n  },\n};\n"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"order",children:"order?"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"optional order: number | string;\n"})}),"\n",(0,t.jsx)(n.p,{children:"Optional sorting order used to override natural object ordering. All nodes with a sort order will be rendered before nodes without a sort order."}),"\n",(0,t.jsx)(n.p,{children:"Nodes without an explicit order will be sorted according to ECMA object sorting rules."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://262.ecma-international.org/6.0/#sec-ordinary-object-internal-methods-and-internal-slots-ownpropertykeys",children:"https://262.ecma-international.org/6.0/#sec-ordinary-object-internal-methods-and-internal-slots-ownpropertykeys"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"enablevisibilityfilter",children:"enableVisibilityFilter?"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"optional enableVisibilityFilter: boolean;\n"})}),"\n",(0,t.jsx)(n.p,{children:"Filter child nodes by visibility state."})]})}function p(e={}){let{wrapper:n}={...(0,l.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},68502:function(e,n,i){i.d(n,{Z:()=>a,a:()=>r});var s=i(41699);let t={},l=s.createContext(t);function r(e){let n=s.useContext(l);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);