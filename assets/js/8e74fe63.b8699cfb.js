"use strict";(self.webpackChunk_coscene_io_docs=self.webpackChunk_coscene_io_docs||[]).push([["1269"],{23818:function(e,i,t){t.r(i),t.d(i,{frontMatter:()=>d,default:()=>a,toc:()=>o,metadata:()=>s,assets:()=>l,contentTitle:()=>c});var s=JSON.parse('{"id":"viz/message-schemas/line-primitive","title":"LinePrimitive","description":"A primitive representing a series of points connected by lines","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/viz/9-message-schemas/line-primitive.md","sourceDirName":"viz/9-message-schemas","slug":"/viz/message-schemas/line-primitive","permalink":"/docs/viz/message-schemas/line-primitive","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"Qi He","lastUpdatedAt":1755605770000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"LaserScan","permalink":"/docs/viz/message-schemas/laser-scan"},"next":{"title":"LocationFix","permalink":"/docs/viz/message-schemas/location-fix"}}'),n=t(96773),r=t(68502);let d={},c="LinePrimitive",l={},o=[{value:"Parent Data Structure",id:"parent-data-structure",level:2},{value:"Data Structure",id:"data-structure",level:2},{value:"<code>indices</code>",id:"indices",level:3},{value:"Reference Implementation",id:"reference-implementation",level:2}];function h(e){let i={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.header,{children:(0,n.jsx)(i.h1,{id:"lineprimitive",children:"LinePrimitive"})}),"\n",(0,n.jsx)(i.p,{children:"A primitive representing a series of points connected by lines"}),"\n",(0,n.jsx)(i.h2,{id:"parent-data-structure",children:"Parent Data Structure"}),"\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.code,{children:"LinePrimitive"})," appears in the ",(0,n.jsx)(i.a,{href:"./scene-entity",children:(0,n.jsx)(i.code,{children:"SceneEntity"})})," message data structure."]}),"\n",(0,n.jsx)(i.h2,{id:"data-structure",children:"Data Structure"}),"\n",(0,n.jsxs)(i.table,{children:[(0,n.jsx)(i.thead,{children:(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.th,{children:"Field"}),(0,n.jsx)(i.th,{children:"Type"}),(0,n.jsx)(i.th,{children:"Description"})]})}),(0,n.jsxs)(i.tbody,{children:[(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:"type"}),(0,n.jsx)(i.td,{children:(0,n.jsx)(i.a,{href:"./enum-line-type",children:(0,n.jsx)(i.code,{children:"LineType"})})}),(0,n.jsx)(i.td,{children:"Drawing primitive used for the lines"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:"pose"}),(0,n.jsx)(i.td,{children:(0,n.jsx)(i.a,{href:"./pose",children:(0,n.jsx)(i.code,{children:"Pose"})})}),(0,n.jsx)(i.td,{children:"Origin of the lines relative to the reference frame"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:"thickness"}),(0,n.jsx)(i.td,{children:(0,n.jsx)(i.a,{href:"./built-in%20types#float64",children:(0,n.jsx)(i.code,{children:"float64"})})}),(0,n.jsx)(i.td,{children:"Thickness of the lines"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:"scale_invariant"}),(0,n.jsx)(i.td,{children:(0,n.jsx)(i.a,{href:"./built-in%20types#boolean",children:(0,n.jsx)(i.code,{children:"boolean"})})}),(0,n.jsx)(i.td,{children:"Indicates whether thickness is fixed size in screen pixels (true) or specified in world coordinates and scales with camera distance (false)"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:"points"}),(0,n.jsx)(i.td,{children:(0,n.jsx)(i.a,{href:"./point-3",children:(0,n.jsx)(i.code,{children:"Point3[]"})})}),(0,n.jsx)(i.td,{children:"Points on the lines"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:"color"}),(0,n.jsx)(i.td,{children:(0,n.jsx)(i.a,{href:"./color",children:(0,n.jsx)(i.code,{children:"Color"})})}),(0,n.jsx)(i.td,{children:"Solid color for the entire line. Either color or colors must be provided."})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:"colors"}),(0,n.jsx)(i.td,{children:(0,n.jsx)(i.a,{href:"./color",children:(0,n.jsx)(i.code,{children:"Color[]"})})}),(0,n.jsx)(i.td,{children:"Color for each point (if specified, length must match points). Either color or colors must be provided."})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:"indices"}),(0,n.jsx)(i.td,{children:(0,n.jsx)(i.a,{href:"./built-in%20types#uint32",children:(0,n.jsx)(i.code,{children:"uint32[]"})})}),(0,n.jsx)(i.td,{children:"Indices into the points and colors attribute arrays, which can be used to avoid duplicating attribute data."})]})]})]}),"\n",(0,n.jsx)(i.h3,{id:"indices",children:(0,n.jsx)(i.code,{children:"indices"})}),"\n",(0,n.jsxs)(i.p,{children:["If omitted or empty, no indices are used. This default behavior is equivalent to specifying [0, 1, ..., N-1] for indices (where N is the number of ",(0,n.jsx)(i.code,{children:"points"})," provided)."]}),"\n",(0,n.jsx)(i.h2,{id:"reference-implementation",children:"Reference Implementation"}),"\n",(0,n.jsx)(i.p,{children:"The visualization schema is framework-independent and can be implemented using any supported message encoding:"}),"\n",(0,n.jsxs)(i.table,{children:[(0,n.jsx)(i.thead,{children:(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.th,{children:"Encoding"}),(0,n.jsx)(i.th,{children:"Data Structure"})]})}),(0,n.jsxs)(i.tbody,{children:[(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:"ROS 1"}),(0,n.jsx)(i.td,{children:(0,n.jsx)(i.a,{href:"https://github.com/foxglove/foxglove-sdk/blob/main/schemas/ros1/LinePrimitive.msg",children:"foxglove_msgs/LinePrimitive"})})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:"ROS 2"}),(0,n.jsx)(i.td,{children:(0,n.jsx)(i.a,{href:"https://github.com/foxglove/foxglove-sdk/blob/main/schemas/ros2/LinePrimitive.msg",children:"foxglove_msgs/msg/LinePrimitive"})})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:"JSON"}),(0,n.jsx)(i.td,{children:(0,n.jsx)(i.a,{href:"https://github.com/foxglove/foxglove-sdk/blob/main/schemas/jsonschema/LinePrimitive.json",children:"foxglove.LinePrimitive"})})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:"Protobuf"}),(0,n.jsx)(i.td,{children:(0,n.jsx)(i.a,{href:"https://github.com/foxglove/foxglove-sdk/blob/main/schemas/proto/foxglove/LinePrimitive.proto",children:"foxglove.LinePrimitive"})})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:"FlatBuffers"}),(0,n.jsx)(i.td,{children:(0,n.jsx)(i.a,{href:"https://github.com/foxglove/foxglove-sdk/blob/main/schemas/flatbuffer/LinePrimitive.fbs",children:"foxglove.LinePrimitive"})})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:"OMG IDL"}),(0,n.jsx)(i.td,{children:(0,n.jsx)(i.a,{href:"https://github.com/foxglove/foxglove-sdk/blob/main/schemas/omgidl/foxglove/LinePrimitive.idl",children:"foxglove::LinePrimitive"})})]})]})]}),"\n",(0,n.jsx)(i.p,{children:"You must use the data structure names specified above for the visualization to recognize the data structure."})]})}function a(e={}){let{wrapper:i}={...(0,r.a)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},68502:function(e,i,t){t.d(i,{Z:()=>c,a:()=>d});var s=t(41699);let n={},r=s.createContext(n);function d(e){let i=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function c(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:d(e.components),s.createElement(r.Provider,{value:i},e.children)}}}]);