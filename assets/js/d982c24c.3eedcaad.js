"use strict";(self.webpackChunk_coscene_io_docs=self.webpackChunk_coscene_io_docs||[]).push([["8419"],{54651:function(e,t,s){s.r(t),s.d(t,{frontMatter:()=>n,default:()=>a,toc:()=>o,metadata:()=>i,assets:()=>c,contentTitle:()=>l});var i=JSON.parse('{"id":"viz/message-schemas/grid","title":"Grid","description":"A two-dimensional grid of data.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/viz/9-message-schemas/grid.md","sourceDirName":"viz/9-message-schemas","slug":"/viz/message-schemas/grid","permalink":"/docs/viz/message-schemas/grid","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"Qi He","lastUpdatedAt":1755605770000,"frontMatter":{"title":"Grid"},"sidebar":"tutorialSidebar","previous":{"title":"GeoJSON","permalink":"/docs/viz/message-schemas/geo-json"},"next":{"title":"ImageAnnotations","permalink":"/docs/viz/message-schemas/image-annotations"}}'),r=s(96773),d=s(68502);let n={title:"Grid"},l="Grid",c={},o=[{value:"Panel Support",id:"panel-support",level:2},{value:"Data Structure",id:"data-structure",level:2},{value:"Reference Implementation",id:"reference-implementation",level:2}];function h(e){let t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"grid",children:"Grid"})}),"\n",(0,r.jsx)(t.p,{children:"A two-dimensional grid of data."}),"\n",(0,r.jsx)(t.h2,{id:"panel-support",children:"Panel Support"}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"Grid"})," is used in the ",(0,r.jsx)(t.a,{href:"/docs/viz/panel/3d-panel",children:"3D Panel"})," and ",(0,r.jsx)(t.a,{href:"/docs/viz/panel/image-panel",children:"Image Panel"}),"."]}),"\n",(0,r.jsx)(t.h2,{id:"data-structure",children:"Data Structure"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Field"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"timestamp"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"./built-in%20types#time",children:(0,r.jsx)(t.code,{children:"time"})})}),(0,r.jsx)(t.td,{children:"Timestamp of the grid"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"frame_id"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"./built-in%20types#string",children:(0,r.jsx)(t.code,{children:"string"})})}),(0,r.jsx)(t.td,{children:"Reference coordinate system"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"pose"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"./pose",children:(0,r.jsx)(t.code,{children:"Pose"})})}),(0,r.jsx)(t.td,{children:"Position of the grid origin relative to the reference coordinate system; the grid is positioned in the x-y plane relative to this origin"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"column_count"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"./built-in%20types#uint32",children:(0,r.jsx)(t.code,{children:"uint32"})})}),(0,r.jsx)(t.td,{children:"Number of columns in the grid"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"cell_size"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"./vector-2",children:(0,r.jsx)(t.code,{children:"Vector2"})})}),(0,r.jsx)(t.td,{children:"Size of a single grid cell along the x and y axes, relative to the pose"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"row_stride"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"./built-in%20types#uint32",children:(0,r.jsx)(t.code,{children:"uint32"})})}),(0,r.jsx)(t.td,{children:"Number of bytes between rows in the data"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"cell_stride"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"./built-in%20types#uint32",children:(0,r.jsx)(t.code,{children:"uint32"})})}),(0,r.jsx)(t.td,{children:"Number of bytes between cells within a row in the data"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"fields"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"./packed-element-field",children:(0,r.jsx)(t.code,{children:"PackedElementField[]"})})}),(0,r.jsx)(t.td,{children:"Fields in the data. red, green, blue, and alpha are optional for customizing the color of the grid"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"data"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"./built-in%20types#bytes",children:(0,r.jsx)(t.code,{children:"bytes"})})}),(0,r.jsx)(t.td,{children:"Grid cell data, interpreted using fields, arranged in row-major (y-major) order"})]})]})]}),"\n",(0,r.jsx)(t.h2,{id:"reference-implementation",children:"Reference Implementation"}),"\n",(0,r.jsx)(t.p,{children:"The visualization data structure is framework-independent and can be implemented using any supported message encoding:"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Encoding"}),(0,r.jsx)(t.th,{children:"Data Structure"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"ROS 1"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"https://github.com/foxglove/foxglove-sdk/blob/main/schemas/ros1/Grid.msg",children:"foxglove_msgs/Grid"})})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"ROS 2"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"https://github.com/foxglove/foxglove-sdk/blob/main/schemas/ros2/Grid.msg",children:"foxglove_msgs/msg/Grid"})})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"JSON"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"https://github.com/foxglove/foxglove-sdk/blob/main/schemas/jsonschema/Grid.json",children:"foxglove.Grid"})})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Protobuf"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"https://github.com/foxglove/foxglove-sdk/blob/main/schemas/proto/foxglove/Grid.proto",children:"foxglove.Grid"})})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"FlatBuffers"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"https://github.com/foxglove/foxglove-sdk/blob/main/schemas/flatbuffer/Grid.fbs",children:"foxglove.Grid"})})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"OMG IDL"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"https://github.com/foxglove/foxglove-sdk/blob/main/schemas/omgidl/foxglove/Grid.idl",children:"foxglove::Grid"})})]})]})]}),"\n",(0,r.jsx)(t.p,{children:"You must use the data structure names specified above for the visualization to recognize the data structure."})]})}function a(e={}){let{wrapper:t}={...(0,d.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},68502:function(e,t,s){s.d(t,{Z:()=>l,a:()=>n});var i=s(41699);let r={},d=i.createContext(r);function n(e){let t=i.useContext(d);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:n(e.components),i.createElement(d.Provider,{value:t},e.children)}}}]);