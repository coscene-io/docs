"use strict";(self.webpackChunk_coscene_io_docs=self.webpackChunk_coscene_io_docs||[]).push([["4095"],{16624:function(e,n,s){s.r(n),s.d(n,{frontMatter:()=>c,default:()=>a,toc:()=>l,metadata:()=>i,assets:()=>o,contentTitle:()=>r});var i=JSON.parse('{"id":"viz/message-schemas/built-in types","title":"Built-in Types","description":"Built-in types are the building blocks of coScene\'s message schemas.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/viz/9-message-schemas/built-in types.md","sourceDirName":"viz/9-message-schemas","slug":"/viz/message-schemas/built-in types","permalink":"/docs/viz/message-schemas/built-in types","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"Qi He","lastUpdatedAt":1755605770000,"sidebarPosition":2,"frontMatter":{"sidebar_position":2,"title":"Built-in Types"},"sidebar":"tutorialSidebar","previous":{"title":"Introduction","permalink":"/docs/viz/message-schemas/introduction"},"next":{"title":"ArrowPrimitive","permalink":"/docs/viz/message-schemas/arrow-primitive"}}'),t=s(96773),d=s(68502);let c={sidebar_position:2,title:"Built-in Types"},r="Built-in Types",o={},l=[{value:"<code>boolean</code>",id:"boolean",level:3},{value:"<code>bytes</code>",id:"bytes",level:3},{value:"<code>enum</code>",id:"enum",level:3},{value:"<code>float64</code>",id:"float64",level:3},{value:"<code>string</code>",id:"string",level:3},{value:"<code>time</code>",id:"time",level:3},{value:"<code>duration</code>",id:"duration",level:3},{value:"<code>uint32</code>",id:"uint32",level:3},{value:"<code>int32</code>",id:"int32",level:3}];function h(e){let n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h3:"h3",header:"header",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"built-in-types",children:"Built-in Types"})}),"\n",(0,t.jsx)(n.p,{children:"Built-in types are the building blocks of coScene's message schemas."}),"\n",(0,t.jsx)(n.p,{children:"Each field in a message has a type. This type can be another message schema type, an enum, or one of the following built-in types:"}),"\n",(0,t.jsx)(n.h3,{id:"boolean",children:(0,t.jsx)(n.code,{children:"boolean"})}),"\n",(0,t.jsxs)(n.p,{children:["A boolean value, which can be ",(0,t.jsx)(n.code,{children:"true"})," or ",(0,t.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"bytes",children:(0,t.jsx)(n.code,{children:"bytes"})}),"\n",(0,t.jsxs)(n.p,{children:["Raw binary data, represented as a ",(0,t.jsx)(n.code,{children:"Uint8Array"})," in JavaScript."]}),"\n",(0,t.jsx)(n.h3,{id:"enum",children:(0,t.jsx)(n.code,{children:"enum"})}),"\n",(0,t.jsx)(n.p,{children:"An enum, which is a set of named constants."}),"\n",(0,t.jsx)(n.h3,{id:"float64",children:(0,t.jsx)(n.code,{children:"float64"})}),"\n",(0,t.jsx)(n.p,{children:"A 64-bit floating-point number."}),"\n",(0,t.jsx)(n.h3,{id:"string",children:(0,t.jsx)(n.code,{children:"string"})}),"\n",(0,t.jsx)(n.p,{children:"A string value encoded in UTF-8."}),"\n",(0,t.jsx)(n.h3,{id:"time",children:(0,t.jsx)(n.code,{children:"time"})}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Field"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Required"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"sec"})}),(0,t.jsx)(n.td,{children:"uint32"}),(0,t.jsx)(n.td,{children:"\u2713"}),(0,t.jsx)(n.td,{children:"Seconds since the Unix epoch"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"nsec"})}),(0,t.jsx)(n.td,{children:"uint32"}),(0,t.jsx)(n.td,{children:"\u2713"}),(0,t.jsx)(n.td,{children:"Additional nanoseconds"})]})]})]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Note"}),":"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["coScene's Protobuf schema uses ",(0,t.jsx)(n.a,{href:"https://protobuf.dev/reference/protobuf/google.protobuf/#timestamp",children:(0,t.jsx)(n.code,{children:"google.protobuf.Timestamp"})})," to represent the ",(0,t.jsx)(n.code,{children:"time"})," type, with fields ",(0,t.jsx)(n.code,{children:"seconds"})," and ",(0,t.jsx)(n.code,{children:"nanos"}),". However, in ",(0,t.jsx)(n.a,{href:"/",children:"user scripts"}),", ",(0,t.jsx)(n.a,{href:"/",children:"message converters"}),", and other parts of coScene, the values will be represented as ",(0,t.jsx)(n.code,{children:"sec"})," and ",(0,t.jsx)(n.code,{children:"nsec"})," fields to maintain consistency with other data formats."]}),"\n",(0,t.jsx)(n.h3,{id:"duration",children:(0,t.jsx)(n.code,{children:"duration"})}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Field"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Required"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"sec"}),(0,t.jsx)(n.td,{children:"int32"}),(0,t.jsx)(n.td,{children:"\u2713"}),(0,t.jsx)(n.td,{children:"Seconds offset"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"nsec"}),(0,t.jsx)(n.td,{children:"uint32"}),(0,t.jsx)(n.td,{children:"\u2713"}),(0,t.jsx)(n.td,{children:"Additional nanoseconds offset"})]})]})]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Note"}),":"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["coScene's Protobuf schema uses ",(0,t.jsx)(n.a,{href:"https://protobuf.dev/reference/protobuf/google.protobuf/#duration",children:(0,t.jsx)(n.code,{children:"google.protobuf.Duration"})})," to represent the ",(0,t.jsx)(n.code,{children:"duration"})," type, with fields ",(0,t.jsx)(n.code,{children:"seconds"})," and ",(0,t.jsx)(n.code,{children:"nanos"}),". However, in ",(0,t.jsx)(n.a,{href:"/",children:"user scripts"}),", ",(0,t.jsx)(n.a,{href:"/",children:"message converters"}),", and other parts of coScene, the values will be represented as ",(0,t.jsx)(n.code,{children:"sec"})," and ",(0,t.jsx)(n.code,{children:"nsec"})," fields to maintain consistency with other data formats."]}),"\n",(0,t.jsx)(n.h3,{id:"uint32",children:(0,t.jsx)(n.code,{children:"uint32"})}),"\n",(0,t.jsxs)(n.p,{children:["A non-negative integer ranging from ",(0,t.jsx)(n.code,{children:"0"})," to ",(0,t.jsx)(n.code,{children:"4294967295"})," (2^32 - 1)."]}),"\n",(0,t.jsx)(n.h3,{id:"int32",children:(0,t.jsx)(n.code,{children:"int32"})}),"\n",(0,t.jsxs)(n.p,{children:["An integer ranging from ",(0,t.jsx)(n.code,{children:"-2147483648"})," (2^31) to ",(0,t.jsx)(n.code,{children:"2147483647"})," (2^31 - 1)."]})]})}function a(e={}){let{wrapper:n}={...(0,d.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},68502:function(e,n,s){s.d(n,{Z:()=>r,a:()=>c});var i=s(41699);let t={},d=i.createContext(t);function c(e){let n=i.useContext(d);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),i.createElement(d.Provider,{value:n},e.children)}}}]);