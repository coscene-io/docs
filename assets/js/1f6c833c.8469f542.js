"use strict";(self.webpackChunk_coscene_io_docs=self.webpackChunk_coscene_io_docs||[]).push([[3154],{22870:(e,o,t)=>{t.d(o,{A:()=>r});const r=t.p+"assets/images/cocli-upload-file-to-all-records-5e2a974f43f8299af18c0309c1ec90c2.png"},35794:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>s,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"developers/coSceneCli/cli-common-batch-tasks","title":"Examples of Common Batch Operations","description":"Upload the Same File to All Records in a Project","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/developers/coSceneCli/4-cli-common-batch-tasks.md","sourceDirName":"developers/coSceneCli","slug":"/developers/coSceneCli/common-batch-tasks","permalink":"/docs/developers/coSceneCli/common-batch-tasks","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"Qi He","lastUpdatedAt":1742361612000,"sidebarPosition":4,"frontMatter":{"slug":"common-batch-tasks","sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Managing Actions with CLI Tools","permalink":"/docs/developers/coSceneCli/action-operations"},"next":{"title":"Auto-completion","permalink":"/docs/developers/coSceneCli/auto-complete"}}');var n=t(25105),i=t(73331);const l={slug:"common-batch-tasks",sidebar_position:4},c="Examples of Common Batch Operations",s={},a=[{value:"Upload the Same File to All Records in a Project",id:"upload-the-same-file-to-all-records-in-a-project",level:2},{value:"Create a Record for Each Folder in the Current Directory and Upload Files",id:"create-a-record-for-each-folder-in-the-current-directory-and-upload-files",level:2},{value:"Iterate Through All Records and Perform Operations",id:"iterate-through-all-records-and-perform-operations",level:2},{value:"Find All Empty Records Without Any Files",id:"find-all-empty-records-without-any-files",level:3},{value:"Tag All Empty Records",id:"tag-all-empty-records",level:3},{value:"Delete All Empty Records",id:"delete-all-empty-records",level:3}];function d(e){const o={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(o.header,{children:(0,n.jsx)(o.h1,{id:"examples-of-common-batch-operations",children:"Examples of Common Batch Operations"})}),"\n",(0,n.jsx)(o.h2,{id:"upload-the-same-file-to-all-records-in-a-project",children:"Upload the Same File to All Records in a Project"}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-bash",children:"cocli record list | grep -v 'ID' | cut -d ' ' -f1 | xargs -I {} cocli record upload {} ./FILE_FLAG\n"})}),"\n",(0,n.jsx)(o.p,{children:(0,n.jsx)(o.img,{alt:"cocli-upload-file-to-all-records",src:t(22870).A+"",width:"2498",height:"1442"})}),"\n",(0,n.jsx)(o.h2,{id:"create-a-record-for-each-folder-in-the-current-directory-and-upload-files",children:"Create a Record for Each Folder in the Current Directory and Upload Files"}),"\n",(0,n.jsx)(o.p,{children:"Assume we have the following 5 folders, each containing several random files and folders, as shown in the structure below."}),"\n",(0,n.jsx)(o.p,{children:(0,n.jsx)(o.img,{alt:"list-folders-tree-view",src:t(80581).A+"",width:"1440",height:"1424"})}),"\n",(0,n.jsx)(o.p,{children:"We can use the coScene CLI tool and standard Linux command line tools to create records and upload files all at once."}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-bash",children:'# Iterate through all subdirectories in the current directory\nfor dir in */; do\n  # Remove the trailing slash from the directory name and create a new record, getting the record ID\n  record_id=$(cocli record create -t "${dir%/}" | head -n1 | cut -d " " -f3)\n\n  # Upload the contents of the current subdirectory to the created record\n  cocli record upload -R "$record_id" "$dir"\ndone\n'})}),"\n",(0,n.jsx)(o.p,{children:(0,n.jsx)(o.img,{alt:"cocli-create-and-upload-multiple-folders",src:t(93562).A+"",width:"2672",height:"1472"})}),"\n",(0,n.jsx)(o.p,{children:"Open any record on the web interface to see that the command line has uploaded all files and folders from the local directory to the corresponding record."}),"\n",(0,n.jsx)(o.p,{children:(0,n.jsx)(o.img,{alt:"cocli-multiple-folders-uploaded",src:t(97044).A+"",width:"2514",height:"1108"})}),"\n",(0,n.jsx)(o.h2,{id:"iterate-through-all-records-and-perform-operations",children:"Iterate Through All Records and Perform Operations"}),"\n",(0,n.jsx)(o.p,{children:"A common command line operation pattern is to iterate through all records in a user-specified project and perform operations based on a specific pattern."}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-bash",children:"# Get the list of all records in the project, iterate through and provide the Record ID for subsequent operations\nfor id in $(cocli record list | grep -v 'ID' | cut -d ' ' -f1); do\n    # Use $id for subsequent batch operations\ndone\n"})}),"\n",(0,n.jsx)(o.p,{children:"This pattern can be extended to connect more complex batch operations."}),"\n",(0,n.jsx)(o.h3,{id:"find-all-empty-records-without-any-files",children:"Find All Empty Records Without Any Files"}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-bash",children:"for id in $(cocli record list | grep -v 'ID' | cut -d ' ' -f1); do\n    # Get the list of files in the record, removing the header\n    files=$(cocli record list-files $id | tail -n +2)\n\n    # Check if the file list is empty\n    if [[ -z \"$files\" ]]; then\n        # If the file list is empty, output the record ID\n        echo \"Record $id has no files.\"\n    fi\ndone\n"})}),"\n",(0,n.jsx)(o.h3,{id:"tag-all-empty-records",children:"Tag All Empty Records"}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-bash",children:"for id in $(cocli record list | grep -v 'ID' | cut -d ' ' -f1); do\n    # Get the list of files in the record, removing the header\n    files=$(cocli record list-files $id | tail -n +2)\n\n    # Check if the file list is empty\n    if [[ -z \"$files\" ]]; then\n        # Tag all empty records with empty-record\n        cocli record update $id -l empty-record\n    fi\ndone\n"})}),"\n",(0,n.jsx)(o.h3,{id:"delete-all-empty-records",children:"Delete All Empty Records"}),"\n",(0,n.jsx)(o.admonition,{type:"danger",children:(0,n.jsxs)(o.p,{children:["Please be very careful with the ",(0,n.jsx)(o.code,{children:"delete"})," operation, as it may delete important data!!"]})}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-bash",children:"for id in $(cocli record list | grep -v 'ID' | cut -d ' ' -f1); do\n    # Get the list of files in the record, removing the header\n    files=$(cocli record list-files $id | tail -n +2)\n\n    # Check if the file list is empty\n    if [[ -z \"$files\" ]]; then\n        # Delete the current record, using the -f flag to skip manual confirmation\n        cocli record delete $id -f\n    fi\ndone\n"})})]})}function h(e={}){const{wrapper:o}={...(0,i.R)(),...e.components};return o?(0,n.jsx)(o,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},73331:(e,o,t)=>{t.d(o,{R:()=>l,x:()=>c});var r=t(58101);const n={},i=r.createContext(n);function l(e){const o=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function c(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:l(e.components),r.createElement(i.Provider,{value:o},e.children)}},80581:(e,o,t)=>{t.d(o,{A:()=>r});const r=t.p+"assets/images/list-folders-tree-view-f1342ff6ea616cb305c1302373ae791f.png"},93562:(e,o,t)=>{t.d(o,{A:()=>r});const r=t.p+"assets/images/cocli-create-and-upload-multiple-folders-d71a0cc55b8fa55704296e5b9a1e413f.png"},97044:(e,o,t)=>{t.d(o,{A:()=>r});const r=t.p+"assets/images/cocli-multiple-folders-uploaded-e063c73b4738f74a8045c92b696e270b.png"}}]);