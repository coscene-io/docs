"use strict";(self.webpackChunk_coscene_io_docs=self.webpackChunk_coscene_io_docs||[]).push([[1368],{7118:(e,n,o)=>{o.d(n,{A:()=>i});const i=o.p+"assets/images/1-realtime-viz-f9c32caa3da4079a0468f6b33ee09fc8.png"},43789:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>c,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"client/connect-by-cobridge","title":"Connect to Devices coBridge","description":"coBridge is an open-source edge software provided by coScene, currently supporting ros1 noetic, ros2 foxy and humble versions. coBridge runs as a ros node on the robot side and interacts with the cloud through websocket connections. After establishing a connection with the cloud, coBridge can subscribe to ros topics and call ros services based on cloud commands, enabling real-time robot status monitoring, remote command deployment, and other functionalities.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/client/1-connect-by-cobridge.md","sourceDirName":"client","slug":"/client/connect-by-cobridge","permalink":"/docs/client/connect-by-cobridge","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"Woodii","lastUpdatedAt":1745806674000,"sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"\u5ba2\u6237\u7aef","permalink":"/docs/category/client"},"next":{"title":"Installing coScene Software via APT","permalink":"/docs/client/apt-source-install"}}');var s=o(25105),t=o(73331);const c={sidebar_position:1},r="Connect to Devices coBridge",d={},a=[{value:"Install coBridge",id:"install-cobridge",level:2},{value:"Real-time Device Visualization Using coStudio",id:"real-time-device-visualization-using-costudio",level:2},{value:"Visualization Reference Links",id:"visualization-reference-links",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"connect-to-devices-cobridge",children:"Connect to Devices coBridge"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://github.com/coscene-io/coBridge",children:"coBridge"})," is an open-source edge software provided by coScene, currently supporting ",(0,s.jsx)(n.strong,{children:"ros1"})," ",(0,s.jsx)(n.code,{children:"noetic"}),", ",(0,s.jsx)(n.strong,{children:"ros2"})," ",(0,s.jsx)(n.code,{children:"foxy"})," and ",(0,s.jsx)(n.code,{children:"humble"})," versions. coBridge runs as a ros node on the robot side and interacts with the cloud through websocket connections. After establishing a connection with the cloud, coBridge can subscribe to ros topics and call ros services based on cloud commands, enabling real-time robot status monitoring, remote command deployment, and other functionalities."]}),"\n",(0,s.jsx)(n.h2,{id:"install-cobridge",children:"Install coBridge"}),"\n",(0,s.jsx)(n.p,{children:"On the device side, open a terminal and follow these steps to install coBridge."}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Import the public key."}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"  wget https://download.coscene.io/cobridge/coscene.gpg && sudo gpg --dearmor -o /etc/apt/trusted.gpg.d/coscene.gpg coscene.gpg\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsx)(n.li,{children:"Add the source."}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'  echo "deb [signed-by=/etc/apt/trusted.gpg.d/coscene.gpg] https://download.coscene.io/cobridge $(. /etc/os-release && echo $UBUNTU_CODENAME) main" | sudo tee /etc/apt/sources.list.d/cobridge.list\n'})}),"\n",(0,s.jsxs)(n.ol,{start:"3",children:["\n",(0,s.jsx)(n.li,{children:"Update apt and install."}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"  sudo apt update\n  # Note: If ROS_DISTRO is not in your environment variables, ${ROS_DISTRO} should be replaced with 'noetic', 'foxy' or 'humble'\n  sudo apt install ros-${ROS_DISTRO}-cobridge -y\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"4",children:["\n",(0,s.jsx)(n.li,{children:"Run coBridge."}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"  source /opt/ros/${ROS_DISTRO}/setup.bash\n\n  # for ros 1 distribution\n  roslaunch cobridge cobridge.launch\n\n  # for ros 2 distribution\n  ros2 launch cobridge cobridge_launch.xml\n"})}),"\n",(0,s.jsx)(n.h2,{id:"real-time-device-visualization-using-costudio",children:"Real-time Device Visualization Using coStudio"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Download ",(0,s.jsx)(n.a,{href:"https://www.coscene.io/download",children:"coStudio"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:['After launching coStudio, select the "Open Connection" feature.\n',(0,s.jsx)(n.img,{alt:"Open Connection",src:o(84e3).A+"",width:"2402",height:"1602"})]}),"\n",(0,s.jsxs)(n.li,{children:["Choose the coScene Websocket option and enter the connection address in the WebSocket URL field. ",(0,s.jsx)(n.code,{children:"ws://localhost:21274"})," ",(0,s.jsx)(n.strong,{children:"(21274 is the default port for coBridge)"}),".\n",(0,s.jsx)(n.img,{alt:"Select Connection",src:o(79288).A+"",width:"2400",height:"1600"})]}),"\n",(0,s.jsxs)(n.li,{children:["Once connected, you can use different panels for real-time device data visualization.\n",(0,s.jsx)(n.img,{alt:"Real-time Visualization",src:o(7118).A+"",width:"2129",height:"1226"})]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"visualization-reference-links",children:"Visualization Reference Links"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Panel Settings: ",(0,s.jsx)(n.a,{href:"https://docs.coscene.io/docs/category/panel",children:"Panel Settings"})]}),"\n",(0,s.jsxs)(n.li,{children:["Layout Settings: ",(0,s.jsx)(n.a,{href:"https://docs.coscene.io/docs/viz/layout",children:"Layout"})]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},73331:(e,n,o)=>{o.d(n,{R:()=>c,x:()=>r});var i=o(58101);const s={},t=i.createContext(s);function c(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),i.createElement(t.Provider,{value:n},e.children)}},79288:(e,n,o)=>{o.d(n,{A:()=>i});const i=o.p+"assets/images/1-select-connection-5bc9b157fa3b51552f9521bd23f8c96f.png"},84e3:(e,n,o)=>{o.d(n,{A:()=>i});const i=o.p+"assets/images/1-open-connection-aa94cc087cd53799295768f9f1cc1993.png"}}]);