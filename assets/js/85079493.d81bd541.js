"use strict";(self.webpackChunk_coscene_io_docs=self.webpackChunk_coscene_io_docs||[]).push([["5914"],{76308:function(e,n,t){t.r(n),t.d(n,{frontMatter:()=>s,default:()=>h,toc:()=>a,metadata:()=>r,assets:()=>o,contentTitle:()=>c});var r=JSON.parse('{"id":"automation/action-runtime","title":"Action Runtime Information","description":"When an action is running, it automatically prepares some environment variables and upstream helper steps to facilitate data exchange between the action and the platform.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/6-automation/6-action-runtime.md","sourceDirName":"6-automation","slug":"/automation/action-runtime","permalink":"/docs/automation/action-runtime","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"Yujing Zheng","lastUpdatedAt":1751599856000,"sidebarPosition":6,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Invocations","permalink":"/docs/automation/invocation"},"next":{"title":"\u4EFF\u771F\u4E0E\u6D4B\u8BD5","permalink":"/docs/category/sim-and-tests"}}'),i=t(96773),d=t(68502);let s={},c="Action Runtime Information",o={},a=[{value:"Environment Variables",id:"environment-variables",level:2}];function l(e){let n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"action-runtime-information",children:"Action Runtime Information"})}),"\n",(0,i.jsx)(n.p,{children:"When an action is running, it automatically prepares some environment variables and upstream helper steps to facilitate data exchange between the action and the platform."}),"\n",(0,i.jsx)(n.h2,{id:"environment-variables",children:"Environment Variables"}),"\n",(0,i.jsx)(n.p,{children:"Define environment variables in an action for the program to read and use during runtime."}),"\n",(0,i.jsx)(n.p,{children:"When defining environment variables, please avoid using the names preset by the platform to prevent unexpected errors in the program. The platform's preset environment variables are as follows:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Environment Variable Name"}),(0,i.jsx)(n.th,{children:"Value"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"COS_FILE_VOLUME"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"/cos/files"})}),(0,i.jsx)(n.td,{children:"Mount directory for records"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"COS_CODE_VOLUME"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"/cos/codes"})}),(0,i.jsx)(n.td,{children:"Mount directory for code"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"COS_BIN_VOLUME"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"/cos/bins"})}),(0,i.jsx)(n.td,{children:"Mount directory for binary files"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"COS_BUNDLE_VOLUME"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"/cos/bundles"})}),(0,i.jsx)(n.td,{children:"Mount directory for test programs in batch testing"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"COS_ARTIFACT_VOLUME"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"/cos/artifacts"})}),(0,i.jsx)(n.td,{children:"Artifact directory for batch testing"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"COS_OUTPUT_VOLUME"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"/cos/outputs"})}),(0,i.jsx)(n.td,{children:"Output file directory for batch testing"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"COS_ORGID"})}),(0,i.jsx)(n.td,{children:"ORG UUID"}),(0,i.jsx)(n.td,{children:"ORG ID"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"COS_USERID"})}),(0,i.jsx)(n.td,{children:"USER UUID"}),(0,i.jsx)(n.td,{children:"USER ID"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"COS_WAREHOUSEID"})}),(0,i.jsx)(n.td,{children:"WAREHOUSE UUID"}),(0,i.jsx)(n.td,{children:"Warehouse ID"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"COS_PROJECT"})}),(0,i.jsx)(n.td,{children:"PROJECT SLUG"}),(0,i.jsx)(n.td,{children:"Current Action Running Project SLUG"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"COS_PROJECTID"})}),(0,i.jsx)(n.td,{children:"PROJECT UUID"}),(0,i.jsx)(n.td,{children:"Current Action Running Project ID"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"COS_RECORDID"})}),(0,i.jsx)(n.td,{children:"RECORD UUID"}),(0,i.jsx)(n.td,{children:"Record ID"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"COS_ENDPOINT"})}),(0,i.jsx)(n.td,{children:"API URL"}),(0,i.jsx)(n.td,{children:"coScene API Endpoint"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"COS_TOKEN"})}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"CLI and API Token"})]})]})]}),"\n",(0,i.jsx)(n.p,{children:"Some of the above environment variables have empty values, which are optional. If they exist, their values are in UUID format; if not, they are empty."})]})}function h(e={}){let{wrapper:n}={...(0,d.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},68502:function(e,n,t){t.d(n,{Z:()=>c,a:()=>s});var r=t(41699);let i={},d=r.createContext(i);function s(e){let n=r.useContext(d);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),r.createElement(d.Provider,{value:n},e.children)}}}]);