"use strict";(self.webpackChunk_coscene_io_docs=self.webpackChunk_coscene_io_docs||[]).push([["3154"],{31682:function(e,n,t){t.r(n),t.d(n,{frontMatter:()=>a,default:()=>h,toc:()=>c,metadata:()=>s,assets:()=>l,contentTitle:()=>r});var s=JSON.parse('{"id":"viz/extensions/guides/create-custom-panel","title":"Create a Custom Panel","description":"Build a simple panel extension that subscribes to a topic, then register it so you can add it to your visualization layout.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/viz/8-extensions/4-guides/1-create-custom-panel.md","sourceDirName":"viz/8-extensions/4-guides","slug":"/viz/extensions/guides/create-custom-panel","permalink":"/docs/viz/extensions/guides/create-custom-panel","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"Qi He","lastUpdatedAt":1755605770000,"sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"\u6307\u5357","permalink":"/docs/category/extensions/guides"},"next":{"title":"Create a Message Converter","permalink":"/docs/viz/extensions/guides/create-message-converter"}}'),o=t(96773),i=t(68502);let a={sidebar_position:1},r="Create a Custom Panel",l={},c=[{value:"Setup",id:"setup",level:2},{value:"<code>index.ts</code>",id:"indexts",level:3},{value:"<code>ExamplePanel.tsx</code>",id:"examplepaneltsx",level:3},{value:"<code>PanelExtensionContext</code>",id:"panelextensioncontext",level:3},{value:"Troubleshooting Memory Leaks",id:"troubleshooting-memory-leaks",level:2}];function d(e){let n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"create-a-custom-panel",children:"Create a Custom Panel"})}),"\n",(0,o.jsx)(n.p,{children:"Build a simple panel extension that subscribes to a topic, then register it so you can add it to your visualization layout."}),"\n",(0,o.jsx)(n.h2,{id:"setup",children:"Setup"}),"\n",(0,o.jsxs)(n.p,{children:["In your terminal window, ",(0,o.jsx)(n.code,{children:"cd"})," to the directory where your source code resides, then run the following command:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"npm init coscene-extension@latest myExtensionName\n"})}),"\n",(0,o.jsxs)(n.p,{children:["This will use create-coscene-extension to create a ",(0,o.jsx)(n.code,{children:"myExtensionName"})," directory containing the source code for a sample custom panel."]}),"\n",(0,o.jsx)(n.h3,{id:"indexts",children:(0,o.jsx)(n.code,{children:"index.ts"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsxs)(n.strong,{children:[(0,o.jsx)(n.code,{children:"index.ts"})," is the entry point for your extension source code."]})}),"\n",(0,o.jsxs)(n.p,{children:["It must export an ",(0,o.jsx)(n.code,{children:"activate"})," function that:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsxs)(n.strong,{children:["Accepts an ",(0,o.jsx)(n.code,{children:"extensionContext"})," parameter"]})," \u2013 For more information about the ",(0,o.jsx)(n.code,{children:"ExtensionContext"})," type, see @coscene/extension"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Registers the extension's panel"})," \u2013 In this case, ",(0,o.jsx)(n.code,{children:"ExamplePanel"})]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'export function activate(extensionContext: ExtensionContext) {\n  extensionContext.registerPanel({ name: "example-panel", initPanel: initExamplePanel });\n}\n'})}),"\n",(0,o.jsx)(n.h3,{id:"examplepaneltsx",children:(0,o.jsx)(n.code,{children:"ExamplePanel.tsx"})}),"\n",(0,o.jsxs)(n.p,{children:["The panel file referenced in ",(0,o.jsx)(n.code,{children:"index.ts"})," defines the behavior and UI of the custom panel your extension will install."]}),"\n",(0,o.jsxs)(n.p,{children:["While ",(0,o.jsx)(n.code,{children:"ExamplePanel.tsx"})," is written in React, panels are framework-agnostic \u2013 meaning they can be written using DOM primitives, React, or any other frontend framework. See the custom-image-extension for an example panel not written in React."]}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"initPanel"})," function accepts a ",(0,o.jsx)(n.code,{children:"PanelExtensionContext"})," parameter, which contains properties and methods for accessing panel data and rendering UI updates. It can also return an optional cleanup function that runs when the extension's ",(0,o.jsx)(n.code,{children:"panelElement"})," is unmounted."]}),"\n",(0,o.jsx)(n.h3,{id:"panelextensioncontext",children:(0,o.jsx)(n.code,{children:"PanelExtensionContext"})}),"\n",(0,o.jsx)(n.p,{children:"For available properties and methods, see the PanelExtensionContext documentation."}),"\n",(0,o.jsx)(n.h2,{id:"troubleshooting-memory-leaks",children:"Troubleshooting Memory Leaks"}),"\n",(0,o.jsx)(n.p,{children:'Panels in visualization often process continuous data streams at 60 fps or higher. This processing can expose memory issues more quickly than in other "web apps."'}),"\n",(0,o.jsx)(n.p,{children:"Memory or reference issues can quickly consume available memory and lead to out-of-memory (OOM) errors. When this happens, you'll see a tab crash page (in the web app) or a crash report page (in the desktop app). If you notice the entire app crashes more frequently when using your extension, your extension may have a memory leak."}),"\n",(0,o.jsx)(n.p,{children:"Here are some best practices for extensions to help prevent memory leaks:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Minimize references to past message data, or aggregate message data over time."}),"\n",(0,o.jsx)(n.li,{children:"When aggregating message data over time, always set a maximum limit on the amount of data stored."}),"\n",(0,o.jsx)(n.li,{children:"Dereference large objects or arrays that are no longer needed to ensure they are garbage collected."}),"\n",(0,o.jsx)(n.li,{children:"Avoid storing data in the global scope."}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"If you encounter memory leak issues, please contact us via GitHub, Feishu, DingTalk, or other channels and provide your extension code. We are happy to help you debug the problem."})]})}function h(e={}){let{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},68502:function(e,n,t){t.d(n,{Z:()=>r,a:()=>a});var s=t(41699);let o={},i=s.createContext(o);function a(e){let n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);