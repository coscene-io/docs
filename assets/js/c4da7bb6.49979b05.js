"use strict";(self.webpackChunk_coscene_io_docs=self.webpackChunk_coscene_io_docs||[]).push([["1751"],{13257:function(e,i,t){t.r(i),t.d(i,{frontMatter:()=>a,default:()=>p,toc:()=>c,metadata:()=>n,assets:()=>l,contentTitle:()=>r});var n=JSON.parse('{"id":"viz/options","title":"Visualization Options","description":"There are several additional options available for visualization settings.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/viz/6-options.md","sourceDirName":"viz","slug":"/viz/options","permalink":"/docs/viz/options","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"Qi He","lastUpdatedAt":1755605770000,"sidebarPosition":6,"frontMatter":{"sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"Moments","permalink":"/docs/viz/create-moment-viz"},"next":{"title":"Frame Rate Optimization Options","permalink":"/docs/viz/frame-rate-optimization"}}'),o=t(96773),s=t(68502);let a={sidebar_position:6},r="Visualization Options",l={},c=[{value:"TF Compatibility Mode",id:"tf-compatibility-mode",level:2}];function d(e){let i={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",ul:"ul",...(0,s.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(i.header,{children:(0,o.jsx)(i.h1,{id:"visualization-options",children:"Visualization Options"})}),"\n",(0,o.jsx)(i.p,{children:"There are several additional options available for visualization settings."}),"\n",(0,o.jsx)(i.h2,{id:"tf-compatibility-mode",children:"TF Compatibility Mode"}),"\n",(0,o.jsxs)(i.p,{children:["TF2, as an iteration of TF, enforces stricter naming conventions for frame_ids. According to the specification, frame_ids should not begin with a forward slash (",(0,o.jsx)(i.code,{children:"/"}),"). This change came with TF2's removal of tf_prefix support, adopting a simpler and more consistent naming strategy where all frame_ids are treated as string literals."]}),"\n",(0,o.jsxs)(i.p,{children:["However, in practice, you might still encounter frame_ids starting with ",(0,o.jsx)(i.code,{children:"/"})," due to various reasons:"]}),"\n",(0,o.jsxs)(i.ul,{children:["\n",(0,o.jsx)(i.li,{children:"Legacy code migrated from TF1"}),"\n",(0,o.jsx)(i.li,{children:"Developers following old coding habits"}),"\n",(0,o.jsx)(i.li,{children:"Publishers not strictly adhering to TF2 naming conventions"}),"\n"]}),"\n",(0,o.jsxs)(i.p,{children:["This non-standard naming can lead to inconsistencies in the system. For example, the same coordinate frame might appear as both ",(0,o.jsx)(i.code,{children:"base_link"})," and ",(0,o.jsx)(i.code,{children:"/base_link"}),", which affects the proper construction of the TF tree and prevents accurate coordinate transformations."]}),"\n",(0,o.jsx)(i.p,{children:"To address this issue, Kekeliu has implemented a compatibility mode in the visualization system, following RViz's approach. When this option is enabled, the player will attempt to unify all TF messages for consistency."}),"\n",(0,o.jsxs)(i.p,{children:["Official reference: ",(0,o.jsx)(i.a,{href:"https://wiki.ros.org/tf2/Migration#tf_prefix_backwards_compatibility",children:"TF Prefix Backwards Compatibility"})]})]})}function p(e={}){let{wrapper:i}={...(0,s.a)(),...e.components};return i?(0,o.jsx)(i,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},68502:function(e,i,t){t.d(i,{Z:()=>r,a:()=>a});var n=t(41699);let o={},s=n.createContext(o);function a(e){let i=n.useContext(s);return n.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function r(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),n.createElement(s.Provider,{value:i},e.children)}}}]);