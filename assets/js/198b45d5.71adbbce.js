"use strict";(self.webpackChunk_coscene_io_docs=self.webpackChunk_coscene_io_docs||[]).push([["3727"],{19443:function(e,t,n){n.r(t),n.d(t,{frontMatter:()=>i,default:()=>p,toc:()=>d,metadata:()=>a,assets:()=>o,contentTitle:()=>l});var a=JSON.parse('{"id":"viz/extensions/api/other/immutable","title":"Immutable<Type>","description":"Type Parameters","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/viz/8-extensions/5-api/6-other/2-immutable.md","sourceDirName":"viz/8-extensions/5-api/6-other","slug":"/viz/extensions/api/other/immutable","permalink":"/docs/viz/extensions/api/other/immutable","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"Qi He","lastUpdatedAt":1755605770000,"sidebarPosition":2,"frontMatter":{"sidebar_position":2,"title":"Immutable<Type>"},"sidebar":"tutorialSidebar","previous":{"title":"AppSettingValue","permalink":"/docs/viz/extensions/api/other/app-setting-value"},"next":{"title":"MessageEvent<T>","permalink":"/docs/viz/extensions/api/other/message-event"}}'),s=n(96773),r=n(68502);let i={sidebar_position:2,title:"Immutable<Type>"},l="Immutable<Type>",o={},d=[{value:"Type Parameters",id:"type-parameters",level:2}];function u(e){let t={code:"code",h1:"h1",h2:"h2",header:"header",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"immutabletype",children:"Immutable<Type>"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-typescript",children:"type Immutable<Type> = Type extends Exclude<Builtin, Error> ? Type : Type extends Map<infer Keys, infer Values> ? ReadonlyMap<Immutable<Keys>, Immutable<Values>> : Type extends ReadonlyMap<infer Keys, infer Values> ? ReadonlyMap<Immutable<Keys>, Immutable<Values>> : Type extends WeakMap<infer Keys, infer Values> ? WeakMap<Immutable<Keys>, Immutable<Values>> : Type extends Set<infer Values> ? ReadonlySet<Immutable<Values>> : Type extends ReadonlySet<infer Values> ? ReadonlySet<Immutable<Values>> : Type extends WeakSet<infer Values> ? WeakSet<Immutable<Values>> : Type extends Promise<infer Value> ? Promise<Immutable<Value>> : Type extends AnyArray<infer Values> ? Type extends IsTuple<...> ? { readonly [Key in (...)]: (...) } : ReadonlyArray<...> : Type extends object ? { readonly [Key in (...)]: (...) } : ... extends ... ? ... : ...;\n"})}),"\n",(0,s.jsx)(t.h2,{id:"type-parameters",children:"Type Parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsx)(t.tr,{children:(0,s.jsx)(t.th,{children:"Type Parameter"})})}),(0,s.jsx)(t.tbody,{children:(0,s.jsx)(t.tr,{children:(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"Type"})})})})]})]})}function p(e={}){let{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},68502:function(e,t,n){n.d(t,{Z:()=>l,a:()=>i});var a=n(41699);let s={},r=a.createContext(s);function i(e){let t=a.useContext(r);return a.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),a.createElement(r.Provider,{value:t},e.children)}}}]);